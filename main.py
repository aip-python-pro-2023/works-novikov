import os
from dotenv import load_dotenv
import telebot
from telebot import types
import random


load_dotenv()

TELEGRAM_TOKEN = os.environ['TELEGRAM_TOKEN']

bot = telebot.TeleBot(TELEGRAM_TOKEN, parse_mode=None)
pic_muravei = "https://cdn-edge.kwork.ru/files/portfolio/t3/78/314e91808525b26c7e57a5392816239a6b2197be-1691038968.gif"
pic_bogomol = "https://img.pikbest.com/png-images/qianku/pixel-drawing-insect-mantis_2272581.png!sw800"
pic_pole = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTIWI1JEY07dmBler0RKSelI90B77HSxzXhpmenK8R6LHaSNv7afa7XDnxK1UpvJNDKOw0&usqp=CAU"
pic_muravyi = "https://avatars.yandex.net/get-games/1890793/2a000001876b286899c95865b62687ab33d1/pjpg160x160"
pic_les = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTX1YgDDzzat1aVE6hYtJCCQugHEB8z-PX2ww&usqp=CAU"
pic_listok= "https://img.freepik.com/premium-vector/leaf-logo-icon-in-pixel-art_588783-270.jpg"
pic_pauk="https://static.vecteezy.com/system/resources/previews/023/685/239/original/pixel-art-illustration-spider-pixelated-spider-insect-creepy-enemy-spider-pixelated-for-the-pixel-art-game-and-icon-for-website-and-video-game-old-school-retro-vector.jpg"

## –Ω–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è
################################################################################################

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("—Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é üè°")
    bot.send_photo(message.chat.id, pic_pole)
    bot.send_message(message.chat.id, '–ø—Ä–∏–≤–µ—Ç , —Å–µ–π—á–∞—Å —Ç—ã –Ω–∞ –ø–æ–ª–µ , –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é',
                     reply_markup=markup)
    bot.register_next_step_handler(message, act1, "—Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é üè°")



## —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∏–∏

def act1(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("2", "3", "4")

    if message.text == "—Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é üè°":
        bot.send_message(message.chat.id, '—Ö–æ—Ä–æ—à–æ ,–Ω–æ —á—Ç–æ –±—ã –≤—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ç—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä –ª–∞–ø —É –º—É—Ä–∞–≤—å–µ–≤', reply_markup=markup)
        bot.register_next_step_handler(message, act2, "")
    else:
        bot.register_next_step_handler(message, act1, "")

## –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ

def act2(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")

    if message.text == "3":
        bot.send_photo(message.chat.id, pic_muravyi)
        bot.send_message(message.chat.id, '–æ—Ç–ª–∏—á–Ω–æ , —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–ª–æ–Ω–∏—è –º—É—Ä–∞–≤—å–µ–≤ ',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '–¥–ª—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–≤–æ–µ–π –∫–æ–ª–æ–Ω–∏–∏ –Ω—É–∂–Ω—ã —Ä–µ—Å—É—Ä—Å—ã',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è" –∏ –≤—ã–±–µ—Ä–∏ –ª–µ—Å —á—Ç–æ –±—ã –Ω–∞–π—Ç–∏ –µ–¥—É',
                         reply_markup=markup)
        bot.register_next_step_handler(message, act3, "")
    else:
        bot.register_next_step_handler(message, act2, "")

## –≤—Ö–æ–¥ –≤ –ª–µ—Å

def act3(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ª–µ—Å üå≤")


    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí":
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act4, "")
    else:
        bot.register_next_step_handler(message, act3, "")
## –ø–æ–∏—Å–∫ –µ–¥—ã

def act4(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™")

    if message.text == "–ª–µ—Å üå≤":
        os.environ["price_s_f"] = "30"

        bot.send_photo(message.chat.id, pic_les)
        bot.send_message(message.chat.id, '—Ö–æ—Ä–æ—à–æ , —Ç—ã –∑–∞—à–µ–ª –≤ –ª–µ—Å , –≤—ã–±–µ—Ä–∏ –≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö "–∏—Å–∫–∞—Ç—å –µ–¥—É"',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '—á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –µ–¥—É –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', reply_markup=markup)
        bot.register_next_step_handler(message, act5, "")
    else:
        bot.register_next_step_handler(message, act4, "")
## –≤–æ–ø—Ä–æ—Å

def act5(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("2", "3", "4")

    if message.text == "–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™":
      bot.send_message(message.chat.id, '—Å–∫–æ–ª—å–∫–æ –∂–µ–ª—É–¥–∫–æ–≤ —É –æ–¥–Ω–æ–≥–æ –º—É—Ä–∞–≤—å—è?', reply_markup=markup)
      bot.register_next_step_handler(message, act6, "")
    else:
        bot.register_next_step_handler(message, act5, "")

## –∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ª–∏—Å—Ç–∫–∞

def act6(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("—Å–æ–±—Ä–∞—Ç—å")

    if message.text == "2":
        bot.send_photo(message.chat.id, pic_listok)
        bot.send_message(message.chat.id, '—É—Ä–æ–≤–µ–Ω—å 1 –æ–ø—ã—Ç 5/200', reply_markup=markup)
        bot.send_message(message.chat.id, '–ø–æ–º–Ω–∏ —á—Ç–æ –∫–∞–∂–¥—ã–µ 200 –µ–¥–µ–Ω–∏—Ü –æ–ø—ã—Ç–∞ —É—Ä–æ–≤–µ–Ω—å –ø–æ–≤—ã—à–∞–µ—Ç—Å—è', reply_markup=markup)
        bot.send_message(message.chat.id, '—Ç—ã –æ–±–Ω–æ—Ä—É–∂–∏–ª –ª–∏—Å—Ç–æ–∫ üåø (15) , –ø—Ä–∏–∫–∞–∂–∏ —Å–≤–æ–∏–º –º—É—Ä–∞–≤—å—è–º –∑–∞–±—Ä–∞—Ç—å –µ–≥–æ',
                         reply_markup=markup)
        bot.register_next_step_handler(message, act7, "")
    else:
        bot.register_next_step_handler(message, act6, "")

## —É—Å–∫–æ—Ä–µ–Ω–∏–µ —Å–±–æ—Ä–∞

def act7(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")

    if message.text == "—Å–æ–±—Ä–∞—Ç—å":
     bot.send_message(message.chat.id, '—Å–±–æ—Ä –æ–∫–æ–Ω—á–µ–Ω', reply_markup=markup)
     bot.send_message(message.chat.id, '—Å–∫–ª–∞–¥ : + 15 üåø', reply_markup=markup)
     os.environ["sklad"] = "15"
     os.environ["sklad_max"] = "30"
     os.environ["laky_f"] = "0"
     os.environ["price_l_f"] = "30"
     bot.send_message(message.chat.id, '—Ö–æ—Ä–æ—à–æ , –∞ —Ç–µ–ø–µ—Ä—å –≤–µ—Ä–Ω–∏—Å—å –≤ –∫–æ–ª–æ–Ω–∏—é', reply_markup=markup)
     bot.register_next_step_handler(message, act8, "")
    else:
        bot.register_next_step_handler(message, act7, "")

## –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ

def act8(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∫–æ–ª–æ–Ω–∏—è üè°")


    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí":
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act9, "")
    else:
        bot.register_next_step_handler(message, act8, "")

## –Ω–∞–ø–∞–¥–µ–Ω–∏–µ

def act9(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("4","8","6")


    if message.text == "–∫–æ–ª–æ–Ω–∏—è üè°":
        bot.send_photo(message.chat.id, pic_pauk)
        bot.send_message(message.chat.id, '–ø–æ—Ö–æ–∂–µ —á—Ç–æ –Ω–∞ —Ç–µ–±—è –Ω–∞–ø–∞–ª –ø–∞—É–∫ üï∑Ô∏è (20‚ù§Ô∏è), —á—Ç–æ–±—ã –µ–≥–æ –∞—Ç–∞–∫–æ–≤–∞—Ç—å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ö–æ–¥, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', reply_markup=markup)
        bot.send_message(message.chat.id, '—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 2 + 2 * 2 = ?', reply_markup=markup)
        bot.register_next_step_handler(message, act10, "")
    else:
        bot.register_next_step_handler(message, act9, "")

def act10(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî")


    if message.text == "6":
        bot.send_message(message.chat.id, '—Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏', reply_markup=markup)
        bot.register_next_step_handler(message, act11, "")
    else:
        bot.register_next_step_handler(message, act10, "")
## –∞—Ç–∞–∫–∞

def act11(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("1","0","2")


    if message.text == "–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî":
        bot.send_message(message.chat.id, '–ø–∞—É–∫ üï∑Ô∏è (10‚ù§Ô∏è/20‚ù§Ô∏è)', reply_markup=markup)
        bot.send_message(message.chat.id, '—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è (10‚ù§Ô∏è/10‚ù§Ô∏è) , —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö–∏—Ç–∏–Ω–∞ (20üõ°Ô∏è/20üõ°Ô∏è)', reply_markup=markup)
        bot.send_message(message.chat.id, '—Ç—ã –Ω–∞–Ω–µ—Å –ø–∞—É–∫—É —É–¥–∞—Ä , —Å–µ–π—á–∞—Å –æ–Ω –º–æ–∂–µ—Ç —Ç–µ–±—è –∞—Ç–∞–∫–∞—Ç—å, —Ç—ã –º–æ–∂–µ—à—å –∑–∞—â–∏—Ç–∏—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å !', reply_markup=markup)
        bot.send_message(message.chat.id, '—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 1 * 1 - 1 = ?', reply_markup=markup)
        bot.register_next_step_handler(message, act12, "")
    else:
        bot.register_next_step_handler(message, act11, "")

def act12(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∑–∞—â–∏—Ç–∏—Ç—å—Å—è üõ°Ô∏è")


    if message.text == "0":
        bot.send_message(message.chat.id, '–∑–∞—â–∏—â–∞–π—Å—è!', reply_markup=markup)
        bot.register_next_step_handler(message, act13, "")
    else:
        bot.register_next_step_handler(message, act12, "")
## –∑–∞—â–∏—Ç–∞

def act13(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("81","93","91")


    if message.text == "–∑–∞—â–∏—Ç–∏—Ç—å—Å—è üõ°Ô∏è":
        bot.send_message(message.chat.id, '—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è (10‚ù§Ô∏è/10‚ù§Ô∏è) , —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö–∏—Ç–∏–Ω–∞ (5üõ°Ô∏è/20üõ°Ô∏è)', reply_markup=markup)
        bot.send_message(message.chat.id, "—Ç—ã –≤—ã–¥–µ—Ä–∂–∞–ª —É–¥–∞—Ä , –Ω–æ –ø–∞—É–∫ –ø–æ–≤—Ä–µ–¥–∏–ª —Ç–≤–æ—é —Ö–∏—Ç–∏–Ω–æ–≤—É—é –æ–±–æ–ª–æ—á–∫—É —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω—è—Ç—å –∑–∞–ø–∞—Å –∑–¥–æ—Ä–æ–≤—å—è –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ–ª–æ–Ω–∏—é" , reply_markup=markup)
        bot.send_message(message.chat.id, '–ø—Ä–æ–¥–æ–ª–∂–∞–π –∞—Ç–∞–∫—É', reply_markup=markup)
        bot.send_message(message.chat.id, '10 * 10 - 2 * 4 - 1 = ?', reply_markup=markup)
        bot.register_next_step_handler(message, act14, "")
    else:
        bot.register_next_step_handler(message, act13, "")


def act14(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî")

    if message.text == "91":
        bot.send_message(message.chat.id, '–æ—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —É–¥–∞—Ä', reply_markup=markup)
        bot.register_next_step_handler(message, act15, "")
    else:
        bot.register_next_step_handler(message, act14, "")

## –ø–æ–±–µ–¥–∞

def act15(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")

    if message.text == "–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî":
        bot.send_message(message.chat.id, '–ø–∞—É–∫ üï∑Ô∏è (0 ‚ù§Ô∏è)', reply_markup=markup)
        bot.send_message(message.chat.id, '—Ç—ã –æ–¥–µ—Ä–∂–∞–ª –ø–æ–±–µ–¥—É –Ω–∞–¥ –≤—Ä–∞–≥–æ–º , —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å —Å–ø–æ–∫–æ–π–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ–ª–æ–Ω–∏—é', reply_markup=markup)
        bot.send_message(message.chat.id, '—É—Ä–æ–≤–µ–Ω—å 1 –æ–ø—ã—Ç 20/200', reply_markup=markup)
        os.environ["exp"] = "20"
        os.environ["level"] = "1"
        bot.register_next_step_handler(message, act16, "")
    else:
         bot.register_next_step_handler(message, act15, "")
## –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ


def act16(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∫–æ–ª–æ–Ω–∏—è üè°")


    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí":
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act17, "")
    else:
        bot.register_next_step_handler(message, act16, "")

## –≤—Ö–æ–¥ –≤ –∫–æ–ª–æ–Ω–∏—é

def act17(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("üéâ –Ω–∞—á–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω—É—é –∏–≥—Ä—É üéâ")

    if message.text == "–∫–æ–ª–æ–Ω–∏—è üè°":
        bot.send_photo(message.chat.id, pic_muravyi)
        os.environ["location"] = "kolonya"
        os.environ["r"] = "2"
        os.environ["hp"] = "10"
        os.environ["hp_max"] = "10"
        os.environ["hetin"] = "5"
        os.environ["hetin_max"] = "20"
        os.environ["damage"] = "10"
        bot.send_message(message.chat.id, '—Ç—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∫–æ–ª–æ–Ω–∏—é', reply_markup=markup)
        bot.send_message(message.chat.id, '–∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–ª—É—á—à–∞—Ç—å –µ—ë –∏ –≤–æ—Å—Å–æ—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ  , '
                                          '–∞ —Å–µ–π—á–∞—Å —Ç–≤–æ—ë –æ–±—É—á–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–Ω–æ , —É–¥–∞—á–∏!', reply_markup=markup)
        bot.register_next_step_handler(message, act18, "")
    else:
        bot.register_next_step_handler(message, act17, "")


def act18(message, right_answer: str):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)


    if  ((os.environ["location"] == "les") or (message.text == "–ª–µ—Å üå≤")) and (os.environ["r"] == "1"):
        markup.add("–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™", "–∏—Å–∫–∞—Ç—å –≤—Ä–∞–≥–∞ ‚öî","–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")
        os.environ["location"] = "les"
        if message.text == "–ª–µ—Å üå≤":
          bot.send_photo(message.chat.id, pic_les)
          bot.send_message(message.chat.id, '–¢—ã –∑–∞—à–µ–ª –≤ –ª–µ—Å', reply_markup=markup)
        bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)

        bot.register_next_step_handler(message, act19, "")

    elif  ((os.environ["location"] == "kolonya") or (message.text == "–∫–æ–ª–æ–Ω–∏—è üè°"))and(os.environ["r"] == "2"):
        markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí","—É–ª—É—á—à–∏—Ç—å –∫–æ–ª–æ–Ω–∏—é ‚≠ê","c—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–æ–Ω–∏–∏ ‚ÑπÔ∏è",)
        if int(os.environ["hp"]) < int(os.environ["hp_max"]) or int(os.environ["hetin"]) < int(os.environ["hetin_max"]):
            os.environ["price_hp"] = str((int(os.environ["hp_max"]) - int(os.environ["hp"]) + int(os.environ["hetin_max"]) - int(os.environ["hetin"]))*2)
            btn1 = "–ø–æ–ø–æ–ª–Ω–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ ‚ù§Ô∏è(" + os.environ["price_hp"] + 'üåø)'
            markup.add(btn1)
        os.environ["location"] = "kolonya"
        if message.text == "–∫–æ–ª–æ–Ω–∏—è üè°":
          bot.send_photo(message.chat.id, pic_muravyi)
          bot.send_message(message.chat.id, '–¢—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∫–æ–ª–æ–Ω–∏—é', reply_markup=markup)
        bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ', reply_markup=markup)

        bot.register_next_step_handler(message, act19, "")
    else:
        bot.register_next_step_handler(message, act18, "")
##–ª–µ—Å

def act19(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí" :
        if os.environ["location"] != "les":
            markup.add("–ª–µ—Å üå≤")
            os.environ["r"] = "1"
        if os.environ["location"] != "kolonya":
            markup.add("–∫–æ–ª–æ–Ω–∏—è üè°")
            os.environ["r"] = "2"
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act18, "")

    elif message.text == "–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™" :
        markup.add("–æ—Ç–≤–µ—Ç–∏—Ç—å")
        os.environ["target"] = "eda"
        bot.send_message(message.chat.id, '—á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –µ–¥—É –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É', reply_markup=markup)
        bot.register_next_step_handler(message, act20, "")

    elif message.text == "—É–ª—É—á—à–∏—Ç—å –∫–æ–ª–æ–Ω–∏—é ‚≠ê":
        markup.add("1‚≠ê","2‚≠ê","3‚≠ê")
        bot.send_message(message.chat.id, '—Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π:', reply_markup=markup)
        sklad_f = '1) + –º–∞–∫—Å. —Å–∫–∞–ª–∞–¥ –Ω–∞ 15üåø (' + os.environ["price_s_f"] + "üåø)"
        bot.send_message(message.chat.id, sklad_f, reply_markup=markup)

        laky_f = "2) + 2üåø –∫ –∫–∞–∂–¥–æ–º—É –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –ª–∏—Å—Ç—É(" + os.environ["price_l_f"] + "üåø)"
        bot.send_message(message.chat.id, laky_f, reply_markup=markup)

        os.environ["price_hp"] = str(int(os.environ["hp_max"]) + 5)
        hp = "3)  –º–∞–∫—Å.—Ö–ø + 1‚ù§Ô∏è(" + os.environ["price_hp"] + "üåø)"
        bot.send_message(message.chat.id, hp, reply_markup=markup)

        bot.register_next_step_handler(message, act23, "")
    elif message.text == "c—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–ª–æ–Ω–∏–∏ ‚ÑπÔ∏è":
        level = '–≤–∞—à —É—Ä–æ–≤–µ–Ω—å : ' + os.environ["level"]
        markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        bot.send_message(message.chat.id, level, reply_markup=markup)
        exp ='–æ–ø—ã—Ç : '+ os.environ["exp"] + "/200"
        bot.send_message(message.chat.id, exp, reply_markup=markup)
        sklad = os.environ["sklad"] + "üåø/" + os.environ["sklad_max"] + "üåø"
        bot.send_message(message.chat.id, sklad, reply_markup=markup)
        hp = "–∑–¥–æ—Ä–æ–≤—å–µ : " + os.environ["hp"] + "‚ù§Ô∏è/" + os.environ["hp_max"] + "    " + os.environ["hetin"] + "üõ°Ô∏è/" +  os.environ["hetin_max"] + "üõ°Ô∏è"
        bot.send_message(message.chat.id, hp, reply_markup=markup)
        bot.register_next_step_handler(message, act18, "")
    elif  message.text == "–ø–æ–ø–æ–ª–Ω–∏—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ ‚ù§Ô∏è(" + os.environ["price_hp"] + 'üåø)':
        markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        if int(os.environ["sklad"]) >= int(os.environ["price_hp"]):
            os.environ["sklad"] = str(int(os.environ["sklad"]) - int(os.environ["price_hp"]))
            os.environ["hp"] = os.environ["hp_max"]
            os.environ["hetin"] = os.environ["hetin_max"]
            bot.send_message(message.chat.id, "üéâ –∏—Å—Ü–µ–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ üéâ", reply_markup=markup)
            sklad = "—Å–∫–ª–∞–¥ : " + os.environ["sklad"] + "üåø/" + os.environ["sklad_max"] + "üåø"
            bot.send_message(message.chat.id, sklad, reply_markup=markup)
            hp = "–∑–¥–æ—Ä–æ–≤—å–µ : (" + os.environ["hp"] + "‚ù§Ô∏è/" + os.environ["hp_max"] + ")    (" + os.environ["hetin"] + "üõ°Ô∏è/" + os.environ["hetin_max"] + "üõ°Ô∏è)"
            bot.send_message(message.chat.id, hp, reply_markup=markup)
            bot.register_next_step_handler(message, act18, "")
        else:
            bot.send_message(message.chat.id, "‚ùó –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ ‚ùó", reply_markup=markup)
            bot.register_next_step_handler(message, act18, "")

    elif message.text == "–∏—Å–∫–∞—Ç—å –≤—Ä–∞–≥–∞ ‚öî":
        number = random.randint(1, 2)
        if number == 1:
            markup.add("—Å—Ä–∞–∂–µ–Ω–∏–µ ‚öî")
            os.environ["en"] = "pauk"
            os.environ["damage_en"] = str(random.randint(10, 17))
            bot.send_photo(message.chat.id, pic_pauk)
            os.environ["en_hp"] = str(random.randint(15, 25))
            p = "—Ç—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –ø–∞—É–∫–∞ üï∑Ô∏è(" + os.environ["en_hp"] + "‚ù§Ô∏è)(" + os.environ["damage_en"] + "‚öî)"
            bot.send_message(message.chat.id, p, reply_markup=markup)
            os.environ["step"] == "attack"
            bot.register_next_step_handler(message, act24, "")

        if number == 2:
            markup.add("—Å—Ä–∞–∂–µ–Ω–∏–µ ‚öî")
            os.environ["en"] = "muravey"
            bot.send_photo(message.chat.id, pic_muravei)
            os.environ["damage_en"] = str(random.randint(5, 12))
            os.environ["en_hp"] = str(random.randint(7, 15))
            p = "—Ç—ã –≤—Å—Ç—Ä–µ—Ç–∏–ª –º—É—Ä–∞–≤—å—è üêú(" + os.environ["en_hp"] + "‚ù§Ô∏è)(" + os.environ["damage_en"] + "‚öî)"
            bot.send_message(message.chat.id, p, reply_markup=markup)
            os.environ["step"] == "attack"
            bot.register_next_step_handler(message, act24, "")


    else:
        bot.register_next_step_handler(message, act19, "")
##–∏—Å–∫–∞—Ç—å –µ–¥—É


## –≤–æ–ø—Ä–æ—Å—ã

def act20(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    if message.text == "–æ—Ç–≤–µ—Ç–∏—Ç—å":
        number = str(random.randint(1,2))
        question = os.environ["ql_" + number]
        answer = os.environ["ql_" + number + '0']
        option1 = answer
        option2 = os.environ["ql_" + number + '1']
        option3 = os.environ["ql_" + number + '2']
        bot.send_message(message.chat.id, question,reply_markup=markup)
        number = int(random.randint(1,6))
        if number == 1:
             markup.add(option1,option2,option3)
        if number == 2:
             markup.add(option1,option3,option2)
        if number == 3:
             markup.add(option2,option1,option3)
        if number == 4:
             markup.add(option2,option3,option1)
        if number == 5:
             markup.add(option3,option1,option2)
        if number == 6:
             markup.add(option3,option2,option1)
        bot.send_message(message.chat.id, '—Ä–µ—à–∏ –∑–∞–≥–∞–¥–∫—É',reply_markup=markup)
        bot.register_next_step_handler(message, act21,answer)
    else:
        bot.register_next_step_handler(message, act20,"")


## –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞

def act21(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    reply_markup = markup
    why = os.environ["ql_" + right_answer + 'w']


    if message.text == right_answer:
            bot.send_message(message.chat.id, "–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úî", reply_markup=markup)
            os.environ["is_answer_right"] = "1"
            os.environ["exp"] = str(int(os.environ["exp"]) + 5)
            exp = int(os.environ["exp"])
            if exp == 200 or exp > 200:
                exp = exp - 200
                os.environ["level"] = str(int(os.environ["level"]) + 1)
            level = os.environ["level"]
            os.environ["exp"] = str(exp)
            level = '–≤–∞—à —É—Ä–æ–≤–µ–Ω—å : ' + os.environ["level"]
            bot.send_message(message.chat.id, level, reply_markup=markup)
            exp = '–æ–ø—ã—Ç : ' + os.environ["exp"] + "/200"
            bot.send_message(message.chat.id, exp, reply_markup=markup)


    else:
            markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
            bot.send_message(message.chat.id, "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚ùå", reply_markup=markup)
            os.environ["is_answer_right"] = "0"
            bot.send_message(message.chat.id, "–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç", reply_markup=markup)
            bot.send_message(message.chat.id, right_answer, reply_markup=markup)
    bot.send_message(message.chat.id, why, reply_markup=markup)
    if os.environ["is_answer_right"] == "1":
        if os.environ["location"] == "les":
            if os.environ["target"] == "eda":
             markup.add("—Å–æ–±—Ä–∞—Ç—å")
             number = int(random.randint(5, 20))+ int(os.environ["laky_f"])
             os.environ["listok"]=str(number + int(os.environ["laky_f"]))
             bot.send_photo(message.chat.id, pic_listok)
             listok = '—Ç—ã –æ–±–Ω–æ—Ä—É–∂–∏–ª –ª–∏—Å—Ç–æ–∫ üåø(' + str(number) + ")"
             bot.send_message(message.chat.id,listok, reply_markup=markup)
             bot.register_next_step_handler(message, act22, "")
    if os.environ["is_answer_right"] == "0":
     bot.register_next_step_handler(message, act18, "")

def act22(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")


    if message.text == "—Å–æ–±—Ä–∞—Ç—å":
     bot.send_message(message.chat.id, '—Å–±–æ—Ä –æ–∫–æ–Ω—á–µ–Ω', reply_markup=markup)
     number = os.environ["listok"]
     sklad = int(number) + int(os.environ["sklad"])
     os.environ["sklad"] = str(sklad)
     if  int(os.environ["sklad"]) >= int(os.environ["sklad_max"]):
       os.environ["sklad"] = str(int(os.environ["sklad"]) - (int(os.environ["sklad"]) - int(os.environ["sklad_max"])))
       bot.send_message(message.chat.id, "‚ùó —Å–∫–ª–∞–¥ –∑–∞–ø–æ–ª–Ω–µ–Ω ‚ùó", reply_markup=markup)
     sklad = '—Å–∫–ª–∞–¥ : ' + os.environ["sklad"] + "üåø/" + os.environ["sklad_max"] + "üåø"
     bot.send_message(message.chat.id,sklad, reply_markup=markup)
     bot.register_next_step_handler(message, act18, "")
    else:
        bot.register_next_step_handler(message, act22, "")

def act23(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")

    if message.text == "1‚≠ê":
        if int(os.environ["sklad"]) >= int(os.environ["price_s_f"]):

            os.environ["sklad_max"] = str(int(os.environ["sklad_max"]) + 15)
            os.environ["sklad"] = str(int(os.environ["sklad"]) - int(os.environ["price_s_f"]))
            bot.send_message(message.chat.id, "üéâ —É–ª—É—á—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ üéâ", reply_markup=markup)
            sklad = "—Å–∫–ª–∞–¥ : " + os.environ["sklad"] + "üåø/" + os.environ["sklad_max"] + "üåø"
            bot.send_message(message.chat.id, sklad, reply_markup=markup)
            os.environ["price_s_f"] = str(int(os.environ["price_s_f"]) + 10)
            bot.register_next_step_handler(message, act18, "")
        else:
            bot.send_message(message.chat.id, "‚ùó –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ ‚ùó", reply_markup=markup)
            bot.register_next_step_handler(message, act18, "")

    if message.text == "2‚≠ê":
        if int(os.environ["sklad"]) >= int(os.environ["price_l_f"]):
            os.environ["laky_f"] = str(int(os.environ["laky_f"]) + 2)
            os.environ["sklad"] = str(int(os.environ["sklad"]) - int(os.environ["price_l_f"]))
            bot.send_message(message.chat.id, "üéâ —É–ª—É—á—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ üéâ", reply_markup=markup)
            sklad = "—Å–∫–ª–∞–¥ : " + os.environ["sklad"] + "üåø/" + os.environ["sklad_max"] + "üåø"
            bot.send_message(message.chat.id, sklad, reply_markup=markup)
            os.environ["price_l_f"] = str(int(os.environ["price_l_f"]) + 20)
            bot.register_next_step_handler(message, act18, "")
        else:
            bot.send_message(message.chat.id, "‚ùó –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ ‚ùó", reply_markup=markup)
            bot.register_next_step_handler(message, act18, "")
    if message.text == "3‚≠ê":
        if int(os.environ["sklad"]) >= int(os.environ["price_l_f"]):
            os.environ["hp_max"] = str(int(os.environ["hp_max"]) + 1)
            os.environ["sklad"] = str(int(os.environ["sklad"]) - int(os.environ["price_hp"]))
            bot.send_message(message.chat.id, "üéâ —É–ª—É—á—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ üéâ", reply_markup=markup)
            sklad = "—Å–∫–ª–∞–¥ : " + os.environ["sklad"] + "üåø/" + os.environ["sklad_max"] + "üåø"
            bot.send_message(message.chat.id, sklad, reply_markup=markup)
            bot.register_next_step_handler(message, act18, "")
        else:
            bot.send_message(message.chat.id, "‚ùó –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤ ‚ùó", reply_markup=markup)
            bot.register_next_step_handler(message, act18, "")
    else:
        bot.register_next_step_handler(message, act23, "")

def act24(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    number = str(random.randint(3,3))
    question = os.environ["ql_" + number]
    answer = os.environ["ql_" + number + '0']
    option1 = answer
    option2 = os.environ["ql_" + number + '1']
    option3 = os.environ["ql_" + number + '2']
    bot.send_message(message.chat.id, question,reply_markup=markup)
    number = int(random.randint(1,6))
    if number == 1:
             markup.add(option1,option2,option3)
    if number == 2:
             markup.add(option1,option3,option2)
    if number == 3:
             markup.add(option2,option1,option3)
    if number == 4:
             markup.add(option2,option3,option1)
    if number == 5:
             markup.add(option3,option1,option2)
    if number == 6:
             markup.add(option3,option2,option1)
    bot.send_message(message.chat.id, '—Ä–µ—à–∏ –∑–∞–¥–∞—á—É',reply_markup=markup)
    bot.register_next_step_handler(message, act25,answer)

def act25(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    why = os.environ["ql_" + right_answer + 'w']
    if message.text == right_answer and os.environ["step"] =="attack" :
        markup.add("–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî")
        bot.send_message(message.chat.id, '–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úî,—Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∞—Ç–∞–∫–∏', reply_markup=markup)
        os.environ["is_answer_right"] = "1"


    elif message.text == right_answer and os.environ["step"] =="protection" :
        markup.add("–∑–∞—â–∏—Ç–∏—Ç—å—Å—è üõ°Ô∏è")
        bot.send_message(message.chat.id, '–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úî,—Ç—ã –ø–æ–ª—É—á–∞–µ—à—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—â–∏—Ç—ã', reply_markup=markup)
        os.environ["is_answer_right"] = "1"

    else:
        markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        bot.send_message(message.chat.id, "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚ùå", reply_markup=markup)
        os.environ["is_answer_right"] = "0"
        bot.send_message(message.chat.id, "–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç", reply_markup=markup)
        bot.send_message(message.chat.id, right_answer, reply_markup=markup)
    bot.send_message(message.chat.id, why, reply_markup=markup)
    bot.register_next_step_handler(message, act26, "")

def act26(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    if message.text == "–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî" and os.environ["is_answer_right"] == "1" and os.environ["step"] =="attack" :
        os.environ["en_hp"] =  str(int(os.environ["en_hp"]) - int(os.environ["damage"]))
        if int(os.environ["en_hp"]) <= 0 :
            os.environ["en_hp"] = "0"
            bot.send_message(message.chat.id, "—Ç—ã –≤—ã–∏–≥—Ä–∞–ª", reply_markup=markup)
        p = "–≤—Ä–∞–≥ (" + os.environ["en_hp"] + "‚ù§Ô∏è)"
        hp = "–∑–¥–æ—Ä–æ–≤—å–µ : " + os.environ["hp"] + "‚ù§Ô∏è/" + os.environ["hp_max"] + "    " + os.environ["hetin"] + "üõ°Ô∏è/" +  os.environ["hetin_max"] + "üõ°Ô∏è"
        bot.send_message(message.chat.id, p, reply_markup=markup)
        bot.send_message(message.chat.id, hp, reply_markup=markup)
        os.environ["step"] == "protection"
        bot.register_next_step_handler(message, act24, "")

    elif message.text == "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å" and os.environ["is_answer_right"] == "0" and os.environ["step"] =="attack" :
        markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        p = "–≤—Ä–∞–≥ (" + os.environ["en_hp"] + "‚ù§Ô∏è)"
        hp = "–∑–¥–æ—Ä–æ–≤—å–µ : (" + os.environ["hp"] + "‚ù§Ô∏è/" + os.environ["hp_max"] + ")    (" + os.environ["hetin"] + "üõ°Ô∏è/" + os.environ["hetin_max"] + "üõ°Ô∏è)"
        bot.send_message(message.chat.id, p, reply_markup=markup)
        bot.send_message(message.chat.id, hp, reply_markup=markup)
        os.environ["step"] == "protection"
        bot.register_next_step_handler(message, act24, "")

    elif message.text == "–∑–∞—â–∏—Ç–∏—Ç—å—Å—è üõ°Ô∏è" and os.environ["is_answer_right"] == "1" and os.environ["step"] =="protection" :
        os.environ["hetin"] = str(int(os.environ["hetin"]) - int(os.environ["damage_en"]))
        p = "–≤—Ä–∞–≥ (" + os.environ["en_hp"] + "‚ù§Ô∏è)"
        if int(os.environ["hetin"]) <= 0 :
            os.environ["hp"] = str(int(os.environ["hp"]) + int(os.environ["hetin"]))
            os.environ["hetin"] = '0'
        if int(os.environ["hp"]) <= 0:
            os.environ["hp"] = "0"
            bot.send_message(message.chat.id, "—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª", reply_markup=markup)
        hp = "–∑–¥–æ—Ä–æ–≤—å–µ : " + os.environ["hp"] + "‚ù§Ô∏è/" + os.environ["hp_max"] + "    " + os.environ["hetin"] + "üõ°Ô∏è/" +  os.environ["hetin_max"] + "üõ°Ô∏è"
        bot.send_message(message.chat.id, p, reply_markup=markup)
        bot.send_message(message.chat.id, hp, reply_markup=markup)
        os.environ["step"] == "attack"
        bot.register_next_step_handler(message, act24, "")

    elif message.text == "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å" and os.environ["is_answer_right"] == "0" and os.environ["step"] == "protection":
        markup.add("–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
        os.environ["hp"] = str(int(os.environ["hp"]) + int(os.environ["damage_en"]))
        if int(os.environ["hp"]) <= 0:
            bot.send_message(message.chat.id, "—Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª", reply_markup=markup)
        bot.send_message(message.chat.id, "kflyj", reply_markup=markup)


    else :
        bot.register_next_step_handler(message, act26, "")


bot.infinity_polling()
