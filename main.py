import os
from dotenv import load_dotenv
import telebot
from telebot import types
import random
import time

load_dotenv()

TELEGRAM_TOKEN = os.environ['TELEGRAM_TOKEN']

bot = telebot.TeleBot(TELEGRAM_TOKEN, parse_mode=None)
pic_pole = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTIWI1JEY07dmBler0RKSelI90B77HSxzXhpmenK8R6LHaSNv7afa7XDnxK1UpvJNDKOw0&usqp=CAU"
pic_muravyi = "https://avatars.yandex.net/get-games/1890793/2a000001876b286899c95865b62687ab33d1/pjpg160x160"
pic_les = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTX1YgDDzzat1aVE6hYtJCCQugHEB8z-PX2ww&usqp=CAU"
pic_listok= "https://img.freepik.com/premium-vector/leaf-logo-icon-in-pixel-art_588783-270.jpg"
pic_pauk="https://static.vecteezy.com/system/resources/previews/023/685/239/original/pixel-art-illustration-spider-pixelated-spider-insect-creepy-enemy-spider-pixelated-for-the-pixel-art-game-and-icon-for-website-and-video-game-old-school-retro-vector.jpg"

## –Ω–∞—á–∞–ª–æ –æ–±—É—á–µ–Ω–∏—è
#################################################################################################

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("—Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é üè°")
    bot.send_photo(message.chat.id, pic_pole)
    bot.send_message(message.chat.id, '–ø—Ä–∏–≤–µ—Ç , —Å–µ–π—á–∞—Å —Ç—ã –Ω–∞ –ø–æ–ª–µ , –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é',
                     reply_markup=markup)
    bot.register_next_step_handler(message, act1, "—Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é üè°")

## —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–ª–æ–Ω–∏–∏

def act1(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("2", "3", "4")

    if message.text == "—Å–æ–∑–¥–∞—Ç—å –∫–æ–ª–æ–Ω–∏—é üè°":
        bot.send_message(message.chat.id, '—Ö–æ—Ä–æ—à–æ ,–Ω–æ —á—Ç–æ –±—ã –≤—Å–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —Ç—ã –¥–æ–ª–∂–µ–Ω –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '—Å–∫–æ–ª—å–∫–æ –ø–∞—Ä –ª–∞–ø —É –º—É—Ä–∞–≤—å–µ–≤', reply_markup=markup)
        bot.register_next_step_handler(message, act2, "")
    else:
        bot.register_next_step_handler(message, act1, "")

## –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ

def act2(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")

    if message.text == "3":
        bot.send_photo(message.chat.id, pic_muravyi)
        bot.send_message(message.chat.id, '–æ—Ç–ª–∏—á–Ω–æ , —Ç–µ–ø–µ—Ä—å —É —Ç–µ–±—è –µ—Å—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–ª–æ–Ω–∏—è –º—É—Ä–∞–≤—å–µ–≤ ',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '–¥–ª—è —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–≤–æ–µ–π –∫–æ–ª–æ–Ω–∏–∏ –Ω—É–∂–Ω—ã —Ä–µ—Å—É—Ä—Å—ã',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '–Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è" –∏ –≤—ã–±–µ—Ä–∏ –ª–µ—Å —á—Ç–æ –±—ã –Ω–∞–π—Ç–∏ –µ–¥—É',
                         reply_markup=markup)
        bot.register_next_step_handler(message, act3, "")
    else:
        bot.register_next_step_handler(message, act2, "")

## –≤—Ö–æ–¥ –≤ –ª–µ—Å

def act3(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ª–µ—Å üå≤")


    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí":
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act4, "")
    else:
        bot.register_next_step_handler(message, act3, "")
## –ø–æ–∏—Å–∫ –µ–¥—ã

def act4(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™")

    if message.text == "–ª–µ—Å üå≤":

        bot.send_photo(message.chat.id, pic_les)
        bot.send_message(message.chat.id, '—Ö–æ—Ä–æ—à–æ , —Ç—ã –∑–∞—à–µ–ª –≤ –ª–µ—Å , –≤—ã–±–µ—Ä–∏ –≤ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è—Ö "–∏—Å–∫–∞—Ç—å –µ–¥—É"',
                         reply_markup=markup)
        bot.send_message(message.chat.id, '—á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –µ–¥—É –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å', reply_markup=markup)
        bot.register_next_step_handler(message, act5, "")
    else:
        bot.register_next_step_handler(message, act4, "")
## –≤–æ–ø—Ä–æ—Å

def act5(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("2", "3", "4")

    if message.text == "–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™":
      bot.send_message(message.chat.id, '—Å–∫–æ–ª—å–∫–æ –∂–µ–ª—É–¥–∫–æ–≤ —É –æ–¥–Ω–æ–≥–æ –º—É—Ä–∞–≤—å—è?', reply_markup=markup)
      bot.register_next_step_handler(message, act6, "")
    else:
        bot.register_next_step_handler(message, act5, "")

## –∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ª–∏—Å—Ç–∫–∞

def act6(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("—É—Å–∫–æ—Ä–∏—Ç—å —Å–±–æ—Ä (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")

    if message.text == "2":
        bot.send_photo(message.chat.id, pic_listok)
        bot.send_message(message.chat.id, '—Ç—ã –æ–±–Ω–æ—Ä—É–∂–∏–ª –ª–∏—Å—Ç–æ–∫ üåø (15) , –ø—Ä–∏–∫–∞–∂–∏ —Å–≤–æ–∏–º –º—É—Ä–∞–≤—å—è–º –∑–∞–±—Ä–∞—Ç—å –µ–≥–æ',
                         reply_markup=markup)
        bot.send_message(message.chat.id,
                         '—á—Ç–æ–±—ã –∑–∞–±–∏—Ä–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –º—É—Ä–∞–≤—å—è–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—Ä–µ–º—è üïë (1 –º–∏–Ω)',
                         reply_markup=markup)
        bot.send_message(message.chat.id,
                         '—á—Ç–æ–±—ã —É—Å–∫–æ—Ä–∏—Ç—å —Å–±–æ—Ä —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –∞–ª–º–∞–∑ üíé , —Å–µ–π—á–∞—Å —ç—Ç–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
                         reply_markup=markup)
        bot.register_next_step_handler(message, act7, "")
    else:
        bot.register_next_step_handler(message, act6, "")

## —É—Å–∫–æ—Ä–µ–Ω–∏–µ —Å–±–æ—Ä–∞

def act7(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")

    if message.text == "—É—Å–∫–æ—Ä–∏—Ç—å —Å–±–æ—Ä (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)":
     bot.send_message(message.chat.id, '—Å–±–æ—Ä –æ–∫–æ–Ω—á–µ–Ω', reply_markup=markup)
     bot.send_message(message.chat.id, '—Å–∫–ª–∞–¥ : + 15 üåø', reply_markup=markup)
     bot.send_message(message.chat.id, '—Ö–æ—Ä–æ—à–æ , –∞ —Ç–µ–ø–µ—Ä—å –≤–µ—Ä–Ω–∏—Å—å –≤ –∫–æ–ª–æ–Ω–∏—é', reply_markup=markup)
     bot.register_next_step_handler(message, act8, "")
    else:
        bot.register_next_step_handler(message, act7, "")

## –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ

def act8(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∫–æ–ª–æ–Ω–∏—è üè°")


    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí":
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act9, "")
    else:
        bot.register_next_step_handler(message, act8, "")

## –Ω–∞–ø–∞–¥–µ–Ω–∏–µ

def act9(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî")


    if message.text == "–∫–æ–ª–æ–Ω–∏—è üè°":
        bot.send_photo(message.chat.id, pic_pauk)
        bot.send_message(message.chat.id, '–ø–æ—Ö–æ–∂–µ —á—Ç–æ –Ω–∞ —Ç–µ–±—è –Ω–∞–ø–∞–ª –ø–∞—É–∫ üï∑Ô∏è (20 —Ö–ø), –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø—É —á—Ç–±—ã –¥–∞—Ç—å –µ–º—É –æ—Ç–ø–æ—Ä', reply_markup=markup)
        bot.register_next_step_handler(message, act10, "")
    else:
        bot.register_next_step_handler(message, act9, "")

## –∞—Ç–∞–∫–∞

def act10(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∑–∞—â–∏—Ç–∏—Ç—å—Å—è üõ°Ô∏è")


    if message.text == "–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî":
        bot.send_message(message.chat.id, '–ø–∞—É–∫ üï∑Ô∏è (10 —Ö–ø)', reply_markup=markup)
        bot.send_message(message.chat.id, '—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è (10 —Ö–ø) , —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö–∏—Ç–∏–Ω–∞ (20 —Ö–ø)', reply_markup=markup)
        bot.send_message(message.chat.id, '—Ç—ã –Ω–∞–Ω–µ—Å –ø–∞—É–∫—É —É–¥–∞—Ä , —Ç–µ–ø–µ—Ä—å –µ–≥–æ —Ö–æ–¥ , –∑–∞—â–∏—â–∞–π—Å—è !', reply_markup=markup)
        bot.register_next_step_handler(message, act11, "")
    else:
        bot.register_next_step_handler(message, act10, "")

## –∑–∞—â–∏—Ç–∞

def act11(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî")


    if message.text == "–∑–∞—â–∏—Ç–∏—Ç—å—Å—è üõ°Ô∏è":
        bot.send_message(message.chat.id, '—Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è (10 —Ö–ø) , —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ö–∏—Ç–∏–Ω–∞ (5 —Ö–ø)', reply_markup=markup)
        bot.send_message(message.chat.id, '—Ç—ã –≤—ã–¥–µ—Ä–∂–∞–ª —É–¥–∞—Ä , –Ω–æ –ø–∞—É–∫ –ø–æ–≤—Ä–µ–¥–∏–ª —Ç–≤–æ—é —Ö–∏—Ç–∏–Ω–æ–≤—É—é –æ–±–æ–ª–æ—á–∫—É , –æ–Ω–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, '
                                          '–Ω–æ —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω—è—Ç—å –∑–∞–ø–∞—Å –∑–¥–æ—Ä–æ–≤—å—è –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ–ª–æ–Ω–∏—é ', reply_markup=markup)
        bot.send_message(message.chat.id, '–ø—Ä–æ–¥–æ–ª–∂–∞–π –∞—Ç–∞–∫—É', reply_markup=markup)
        bot.register_next_step_handler(message, act12, "")
    else:
        bot.register_next_step_handler(message, act11, "")

## –ø–æ–±–µ–¥–∞

def act12(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")

    if message.text == "–∞—Ç–∞–∫–æ–≤–∞—Ç—å ‚öî":
        bot.send_message(message.chat.id, '–ø–∞—É–∫ üï∑Ô∏è (0 —Ö–ø)', reply_markup=markup)
        bot.send_message(message.chat.id, '—Ç—ã –æ–¥–µ—Ä–∂–∞–ª –ø–æ–±–µ–¥—É –Ω–∞ –≤—Ä–∞–≥–æ–º , —Ç–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å —Å–ø–æ–∫–æ–π–Ω–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ–ª–æ–Ω–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act13, "")
    else:
        bot.register_next_step_handler(message, act12, "")
## –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ


def act13(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∫–æ–ª–æ–Ω–∏—è üè°")


    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí":
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act14, "")
    else:
        bot.register_next_step_handler(message, act13, "")

## –≤—Ö–æ–¥ –≤ –∫–æ–ª–æ–Ω–∏—é

def act14(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí")

    if message.text == "–∫–æ–ª–æ–Ω–∏—è üè°":
        bot.send_photo(message.chat.id, pic_muravyi)
        bot.send_message(message.chat.id, '—Ç—ã –≤–µ—Ä–Ω—É–ª—Å—è –≤ –∫–æ–ª–æ–Ω–∏—é', reply_markup=markup)
        bot.send_message(message.chat.id, '–∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å —É–ª—É—á—à–∞—Ç—å —Å–≤–æ—é –µ—ë –∏ –≤–æ—Å—Å–æ—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å –∑–¥–æ—Ä–æ–≤—å–µ  , '
                                          '–∞ —Å–µ–π—á–∞—Å —Ç–≤–æ—ë –æ–±—É—á–µ–Ω–∏–µ –∑–∞–∫–æ–Ω—á–∏–Ω–æ , —É–¥–∞—á–∏!', reply_markup=markup)
        bot.register_next_step_handler(message, act15, "")
    else:
        bot.register_next_step_handler(message, act14, "")

#################################################################################################
## –∫–æ–Ω–µ—Ü –æ–±—É—á–µ–Ω–∏—è

def act15(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–ª–µ—Å üå≤")


    if message.text == "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è üéí" :
        bot.send_message(message.chat.id, '–≤—ã–±—Ä–µ—Ä–∏ –ª–æ–∫–∞—Ü–∏—é', reply_markup=markup)
        bot.register_next_step_handler(message, act16, "")
    else:
        bot.register_next_step_handler(message, act15, "")
##–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è

def act16(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™", "–∏—Å–∫–∞—Ç—å –≤—Ä–∞–≥–∞ ‚öî")

    if message.text == "–ª–µ—Å üå≤" or "–≤–µ—Ä–Ω—É—Ç—å—Å—è  ‚¨Ö":
        bot.send_photo(message.chat.id, pic_les)
        bot.send_message(message.chat.id, '–¢—ã –∑–∞—à–µ–ª –≤ –ª–µ—Å',
                         reply_markup=markup)
        bot.register_next_step_handler(message, act17, "")
    else:
        bot.register_next_step_handler(message, act16, "")

##–ª–µ—Å

def act17(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("–æ—Ç–≤–µ—Ç–∏—Ç—å","–≤–µ—Ä–Ω—É—Ç—å—Å—è  ‚¨Ö")

    if message.text == "–∏—Å–∫–∞—Ç—å –µ–¥—É ü•™" :

        bot.send_message(message.chat.id, '—á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –µ–¥—É –Ω—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å',
                         reply_markup=markup)
        bot.register_next_step_handler(message, act18, "")
    else:
        bot.register_next_step_handler(message, act17, "")

   ##–∏—Å–∫–∞—Ç—å –µ–¥—É

def act18(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    markup.add("—Å–ª—É—á–∞–π–Ω–æ–µ ‚ùî ","–±–∏–æ–ª–æ–≥–∏—è üî¨", "—Ñ–∏–∑–∏–∫–∞ üåà", "—Ö–∏–º–∏—è üéÜ", "–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞ ‚ûó", "–≥–µ–æ–º–µ—Ç—Ä–∏—è üìê")

    if message.text == "–æ—Ç–≤–µ—Ç–∏—Ç—å":
       bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏ —Ç–µ–º—É', reply_markup=markup)
       bot.register_next_step_handler(message, act19, "")
    if message.text == "–≤–µ—Ä–Ω—É—Ç—å—Å—è  ‚¨Ö":
       bot.register_next_step_handler(message, act16, "")
    else:
        bot.register_next_step_handler(message, act18, "")

## –≤–æ–ø—Ä–æ—Å—ã

def act19(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)


    if message.text == "–±–∏–æ–ª–æ–≥–∏—è üî¨":
        number = str(random.randint(1,1))
    question = os.environ[number]
    answer = os.environ[number + '0']
    option1 = os.environ[number + '1']
    option2 = os.environ[number + '2']
    option3 = os.environ[number + '3']
    markup.add(option1,option2,option3)
    bot.send_message(message.chat.id, question, reply_markup=markup)
    bot.register_next_step_handler(message, act20,answer)

## –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞

def act20(message, right_answer: str):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
    ans_time = int(os.environ[right_answer + 't'])
    sec = 0
    ans = 0
    for sec in range(20):
        if message.text == right_answer:
            bot.send_message(message.chat.id, "–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚úî", reply_markup=markup)
            ans = 1
            sec = 19

        else:
            bot.send_message(message.chat.id, "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚ùå", reply_markup=markup)
            bot.send_message(message.chat.id, "–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç", reply_markup=markup)
            bot.send_message(message.chat.id, right_answer, reply_markup=markup)
            ans = 1
            sec = 19

        if sec == 19:
            break
        time.sleep(1)

    if ans == 0:
        bot.send_message(message.chat.id, "–≤—Ä–µ–º—è –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å üïë", reply_markup=markup)
        bot.send_message(message.chat.id, "–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç", reply_markup=markup)
        bot.send_message(message.chat.id, right_answer, reply_markup=markup)
    bot.register_next_step_handler(message, act19, "")





bot.infinity_polling()
